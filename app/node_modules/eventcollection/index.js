const remote = require("electron").remote;

function OnStart() {
    extensions.extendString(String);
    extensions.extendArray(Array);

    backend.Start();
}

function Button_Save() {
    backend.SaveDeck();
}

function Button_Load() {
    backend.LoadDeck();
}

function Button_Close() {
    remote.getCurrentWindow().close();
}

function Span_Clicked_Collection(span) {
    frontend.UpdateShownCard(span);
}

function Span_DblClicked_Collection(span) {
    var paramObj = objects.ParamObject();
    paramObj.number = span.number;
    paramObj.args = [1];

    backend.LoadJsonFile(backend.AddCard, paramObj);
}

function Card_Added(item) {
    frontend.UpdateShownDeck();
}

function Card_Removed(item) {
    frontend.UpdateShownDeck();
}

var Cards = null;
var Storage = null;

function TabChange(tabNum) {
    if (Cards == null)
        Cards = document.getElementById("Cards");
    if (Storage == null)
        Storage = document.getElementById("Storage");
    //console.log(tabNum);
    if (tabNum != currentTab) {
        currentTab = parseInt(tabNum);
        switch (currentTab) {
            //Cards
            case 0:
                Cards.classList.add("active");
                Storage.classList.remove("active");
                break;
            //Storage
            case 1:
                Cards.classList.remove("active");
                Storage.classList.add("active");
                break;
        }
        frontend.UpdateShownCollection(null);
    }
}

function ContextMenuHandler(dom, e) {
    e.preventDefault();
    if (dom.id.includes("card-")) {
        var x = new objects.ParamObject();
        x.number = dom.number;
        x.correctSubCats = true;
        if (e.ctrlKey)
            backend.LoadJsonFile(backend.RemoveCardFromStorage, x);
        else
            backend.LoadJsonFile(backend.AddCardToStorage, x);
    }
}

module.exports = {
    Span_Clicked_Collection,
    Span_DblClicked_Collection,
    Card_Added,
    Card_Removed,
    Button_Close,
    Button_Load,
    Button_Save,
    ContextMenuHandler,
    TabChange
};

OnStart();